par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
tranf1=tranformed.data1^0.3
tranf2=tranformed.data2^0.9
tranf3=transformed.data3^0.7
tranf4=transformed.data4^0.5
tranf5=transformed.data5^0.4
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
tranf1=tranformed.data1^0.3
tranf2=tranformed.data2^0.9
tranf3=transformed.data3^0.7
tranf4=transformed.data4^0.5
tranf5=transformed.data5^0.6
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
final.data=c(tranf1,tranf2,tranf3,tranf4,tranf5)
final.data
write.table(final.data,"final-transformed1.txt")
tranf2=tranformed.data2^0.8
hist(tranf2)
r_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.3
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.5
tr_data[,5]=tranf5=transformed.data5^0.6
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.3
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.5
tr_data[,5]=tranf5=transformed.data5^0.6
write.table(tr_data,"final-transformed1.txt")
tr_data[,1]=tranf1=tranformed.data1^0.3
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.5
tr_data[,5]=tranf5=transformed.data5^0.6
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
tranf1=tranformed.data1^0.2
hist(tranf1)
tr_data[,1]=tranf1=tranformed.data1^0.6
hist(tranf1)
tr_data[,1]=tranf1=tranformed.data1^0.5
hist(tranf1)
tr_data[,1]=tranf1=tranformed.data1^0.55
hist(tranf1)
tr_data[,1]=tranf1=tranformed.data1^0.37
hist(tranf1)
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
tr_data[,4]=tranf4=transformed.data4^0.57
hist(tranf4)
tr_data[,5]=tranf5=transformed.data5^0.8
hist(tranf5)
tr_data[,5]=tranf5=transformed.data5^0.9
hist(tranf5)
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.37
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.57
tr_data[,5]=tranf5=transformed.data5^0.9
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
#creating a table file of all the transformed data
write.table(tr_data,"final-transformed1.txt")
#Build models and investigate the importance of each variable
source ("AggWaFit718.R")
rmv(r_data)
rmv("r_data")
View(fit.QAM)
#calculating weighted arithmetic mean
W1=fit.QAM(tr_data,output.1="WAMoutput1.txt",stats.1="WAMstats1.txt",g=AM,g.inv=invAM)
View(PM)
View(PM05)
#calculating weighted Power mean with p=0.5
W2= fit.QAM(tr_data,g=PM05,g.inv=invPM05)
PM(tr_data[,1],p=2)
PM(tr_data,p=2)
PM(tr_data[,1],p=2)
PM(tr_data,p=2)
length(tr_data)
xx = length(tr_data)
array(1/length(xx),length(xx))
xx = tr_data
array(1/length(xx),length(xx))
#calculating weighted Power mean with p=2
W2= fit.QAM(tr_data,g=PM2,g.inv=invPM2)
#calculating weighted Power mean with p=2
W2= fit.QAM(tr_data,g=QM,g.inv=invQM)
View(fit.OWA)
W3= fit.QAM(tr_data,g=QM,g.inv=invQM)
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
View(fit.choquet)
#calculating Choquet Integral
W5=fit.choquet(tr_data,output.1="choquetoutput1.txt",stats.1="choquetstats1.txt")
?choquet
??choquet
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
#Use your model for prediction
X8=7.6
X9=24.6
X10=44
X11=4
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output
The_final_output
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQMoutput.1="PM2output1.txt",stats.1="PM2stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM,output.1="PM2output1.txt",stats.1="PM2stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM)
library("lpSolve", lib.loc="~/R/win-library/3.5")
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
library("lpSolve", lib.loc="~/R/win-library/3.5")
the.data <- as.matrix(read.table("Forest718.txt"))
the.data
my.data <- the.data[sample(1:517,200),c(1:13)]
my.data
head(my.data)
#scatterplot data
par(mfrow=c(2,2))
plot(my.data[,8],my.data[,13],main="ISI vs Area",xlab="area",ylab = "ISI")
plot(my.data[,9],my.data[,13],main="temp vs Area",xlab="area",ylab = "temp")
plot(my.data[,10],my.data[,13],main="RH vs Area",xlab="area",ylab = "RH")
plot(my.data[,11],my.data[,13],main="wind vs Area",xlab="area",ylab = "wind")
#histogramn data
par(mfrow=c(3,2))
hist(my.data[,8],main="ISI")
hist(my.data[,9],main="temp")
hist(my.data[,10],main="RH")
hist(my.data[,11],main="wind")
hist(my.data[,13],main="Y:area")
#scaling the data
transformed.data1=(my.data[,8]-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
transformed.data2=(my.data[,9]-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
transformed.data3=(my.data[,10]-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
transformed.data4=(my.data[,11]-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
transformed.data5=(my.data[,13]-min(my.data[,13]))/(max(my.data[,13])-min(my.data[,13]))
par(mfrow=c(3,2))
hist(transformed.data1)
hist(transformed.data2)
hist(transformed.data3)
hist(transformed.data4)
hist(transformed.data5)
#transforming the data and merging all data to a single variable
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.37
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.57
tr_data[,5]=tranf5=transformed.data5^0.9
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
#creating a table file of all the transformed data
write.table(tr_data,"Ashutosh-transformed1.txt")
#Build models and investigate the importance of each variable
source ("AggWaFit718.R")
#calculating weighted arithmetic mean
W1=fit.QAM(tr_data,output.1="WAMoutput1.txt",stats.1="WAMstats1.txt",g=AM,g.inv=invAM)
#calculating weighted Power mean with p=0.5
W2= fit.QAM(tr_data,g=PM05,g.inv=invPM05,output.1="PM05output1.txt",stats.1="PM05stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM,output.1="PM2output1.txt",stats.1="PM2stats1.txt")
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
#calculating Choquet Integral
W5=fit.choquet(tr_data,output.1="choquetoutput1.txt",stats.1="choquetstats1.txt")
#Using model for prediction
X8=7.6
X9=24.6
X10=44
X11=4
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output#This is the Output of the solution
the.data <- as.matrix(read.table("Forest718.txt"))
the.data <- as.matrix(read.table("Forest718.txt"))
the.data
my.data <- the.data[sample(1:517,200),c(1:13)]
my.data
head(my.data)
#scatterplot data
par(mfrow=c(2,2))
plot(my.data[,8],my.data[,13],main="ISI vs Area",xlab="area",ylab = "ISI")
plot(my.data[,9],my.data[,13],main="temp vs Area",xlab="area",ylab = "temp")
plot(my.data[,10],my.data[,13],main="RH vs Area",xlab="area",ylab = "RH")
plot(my.data[,11],my.data[,13],main="wind vs Area",xlab="area",ylab = "wind")
#histogramn data
par(mfrow=c(3,2))
hist(my.data[,8],main="ISI")
hist(my.data[,9],main="temp")
hist(my.data[,10],main="RH")
hist(my.data[,11],main="wind")
hist(my.data[,13],main="Y:area")
#scaling the data
transformed.data1=(my.data[,8]-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
transformed.data2=(my.data[,9]-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
transformed.data3=(my.data[,10]-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
transformed.data4=(my.data[,11]-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
transformed.data5=(my.data[,13]-min(my.data[,13]))/(max(my.data[,13])-min(my.data[,13]))
par(mfrow=c(3,2))
hist(transformed.data1)
hist(transformed.data2)
hist(transformed.data3)
hist(transformed.data4)
hist(transformed.data5)
#transforming the data and merging all data to a single variable
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.37
tr_data[,2]=tranf2=tranformed.data2^0.9
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.57
tr_data[,5]=tranf5=transformed.data5^0.9
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
#creating a table file of all the transformed data
write.table(tr_data,"Ashutosh-transformed1.txt")
#Build models and investigate the importance of each variable
source ("AggWaFit718.R")
#calculating weighted arithmetic mean
W1=fit.QAM(tr_data,output.1="WAMoutput1.txt",stats.1="WAMstats1.txt",g=AM,g.inv=invAM)
#calculating weighted Power mean with p=0.5
W2= fit.QAM(tr_data,g=PM05,g.inv=invPM05,output.1="PM05output1.txt",stats.1="PM05stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM)
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
#calculating Choquet Integral
W5=fit.choquet(tr_data,output.1="choquetoutput1.txt",stats.1="choquetstats1.txt")
#Using model for prediction
X8=7.6
X9=24.6
X10=44
X11=4
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output#This is the Output of the solution
tr_data[,2]=tranf2=tranformed.data2^1.5
hist(tranf2)
tr_data[,2]=tranf2=tranformed.data2^1.2
hist(tranf2)
tr_data[,2]=tranf2=tranformed.data2^1.01
hist(tranf2)
tr_data[,2]=tranf2=tranformed.data2^1.1
hist(tranf2)
tr_data[,4]=tranf4=transformed.data4^0.6
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.3
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.9
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.7
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.69
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.65
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.67
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.68
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.69
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.695
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.699
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.7
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.79
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.8
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.99
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.76
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.6
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.699
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.71
hist(tranf4)
tr_data[,4]=tranf4=transformed.data4^0.75
hist(tranf4)
the.data <- as.matrix(read.table("Forest718.txt"))
the.data
my.data <- the.data[sample(1:517,200),c(1:13)]
my.data
head(my.data)
#scatterplot data
par(mfrow=c(2,2))
plot(my.data[,8],my.data[,13],main="ISI vs Area",xlab="area",ylab = "ISI")
plot(my.data[,9],my.data[,13],main="temp vs Area",xlab="area",ylab = "temp")
plot(my.data[,10],my.data[,13],main="RH vs Area",xlab="area",ylab = "RH")
plot(my.data[,11],my.data[,13],main="wind vs Area",xlab="area",ylab = "wind")
#histogramn data
par(mfrow=c(3,2))
hist(my.data[,8],main="ISI")
hist(my.data[,9],main="temp")
hist(my.data[,10],main="RH")
hist(my.data[,11],main="wind")
hist(my.data[,13],main="Y:area")
#scaling the data
transformed.data1=(my.data[,8]-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
transformed.data2=(my.data[,9]-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
transformed.data3=(my.data[,10]-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
transformed.data4=(my.data[,11]-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
transformed.data5=(my.data[,13]-min(my.data[,13]))/(max(my.data[,13])-min(my.data[,13]))
par(mfrow=c(3,2))
hist(transformed.data1)
hist(transformed.data2)
hist(transformed.data3)
hist(transformed.data4)
hist(transformed.data5)
#transforming the data and merging all data to a single variable
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.37
tr_data[,2]=tranf2=tranformed.data2^1.1
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.75
tr_data[,5]=tranf5=transformed.data5^0.9
par(mfrow=c(3,2))
hist(tranf1)
hist(tranf2)
hist(tranf3)
hist(tranf4)
hist(tranf5)
#creating a table file of all the transformed data
write.table(tr_data,"Ashutosh-transformed1.txt")
#Build models and investigate the importance of each variable
source ("AggWaFit718.R")
#calculating weighted arithmetic mean
W1=fit.QAM(tr_data,output.1="WAMoutput1.txt",stats.1="WAMstats1.txt",g=AM,g.inv=invAM)
#calculating weighted Power mean with p=0.5
W2= fit.QAM(tr_data,g=PM05,g.inv=invPM05,output.1="PM05output1.txt",stats.1="PM05stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM)
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
#calculating Choquet Integral
W5=fit.choquet(tr_data,output.1="choquetoutput1.txt",stats.1="choquetstats1.txt")
#Using model for prediction
X8=7.6
X9=24.6
X10=44
X11=4
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output#This is the Output of the solution
par(mfrow=c(3,2))
hist(tranf1,main = "ISI")
hist(tranf2,main = "temp")
hist(tranf3,main = "RH")
hist(tranf4,main = "wind")
hist(tranf5,main = "Burned Area")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM,output.1="PM2output1.txt",stats.1="PM2stats1.txt")
setwd("~/Real world analytics/new data")
the.data <- as.matrix(read.table("Forest718.txt"))
the.data
my.data <- the.data[sample(1:517,200),c(1:13)]
my.data
head(my.data)
#scatterplot data
par(mfrow=c(2,2))
plot(my.data[,8],my.data[,13],main="ISI vs Area",xlab="area",ylab = "ISI")
plot(my.data[,9],my.data[,13],main="temp vs Area",xlab="area",ylab = "temp")
plot(my.data[,10],my.data[,13],main="RH vs Area",xlab="area",ylab = "RH")
plot(my.data[,11],my.data[,13],main="wind vs Area",xlab="area",ylab = "wind")
#histogramn data
par(mfrow=c(3,2))
hist(my.data[,8],main="ISI")
hist(my.data[,9],main="temp")
hist(my.data[,10],main="RH")
hist(my.data[,11],main="wind")
hist(my.data[,13],main="Y:area")
#scaling the data
transformed.data1=(my.data[,8]-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
transformed.data2=(my.data[,9]-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
transformed.data3=(my.data[,10]-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
transformed.data4=(my.data[,11]-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
transformed.data5=(my.data[,13]-min(my.data[,13]))/(max(my.data[,13])-min(my.data[,13]))
par(mfrow=c(3,2))
hist(transformed.data1)
hist(transformed.data2)
hist(transformed.data3)
hist(transformed.data4)
hist(transformed.data5)
#transforming the data and merging all data to a single variable
tr_data = array(0,c(200,5))
tr_data[,1]=tranf1=tranformed.data1^0.37
tr_data[,2]=tranf2=tranformed.data2^1.1
tr_data[,3]=tranf3=transformed.data3^0.7
tr_data[,4]=tranf4=transformed.data4^0.75
tr_data[,5]=tranf5=transformed.data5^0.9
par(mfrow=c(3,2))
hist(tranf1,main = "ISI")
hist(tranf2,main = "temp")
hist(tranf3,main = "RH")
hist(tranf4,main = "wind")
hist(tranf5,main = "Burned Area")
#creating a table file of all the transformed data
write.table(tr_data,"Ashutosh-transformed1.txt")
#Build models and investigate the importance of each variable
source ("AggWaFit718.R")
#calculating weighted arithmetic mean
W1=fit.QAM(tr_data,output.1="WAMoutput1.txt",stats.1="WAMstats1.txt",g=AM,g.inv=invAM)
#calculating weighted Power mean with p=0.5
W2= fit.QAM(tr_data,g=PM05,g.inv=invPM05,output.1="PM05output1.txt",stats.1="PM05stats1.txt")
#calculating weighted Power mean with p=2
W3= fit.QAM(tr_data,g=QM,g.inv=invQM,output.1="PM2output1.txt",stats.1="PM2stats1.txt")
#calculating Ordered weighted Averaging
W4=fit.OWA(tr_data,output.1="OWAoutput1.txt",stats.1="OWAstats1.txt")
#calculating Choquet Integral
W5=fit.choquet(tr_data,output.1="choquetoutput1.txt",stats.1="choquetstats1.txt")
#Using model for prediction
X8=7.6
X9=24.6
X10=44
X11=4
choquet_weights=c(0,0.564591520748351,0.611828272513259, 0,0,0.564591520748351,0.611828272513259,0,0,0.564591520748351,0.747777811857352,0,0.164819948552539,0.564591520748351,1)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output#This is the Output of the solution
setwd("~/Real world analytics/Assig 2")
choquet_weights=c(0.797895446209019,0,0.797895446212833,0.010676064685826,0.797895446209019,0.010676064685826,0.797895446212833,0,0.797895446209019,0.244807062882466,0.85878374330665,0.119091041046372,1.00000000000007,0.244807062882344,1.00000000000646)
X8=(X8-min(my.data[,8]))/(max(my.data[,8])-min(my.data[,8]))
X9=(X9-min(my.data[,9]))/(max(my.data[,9])-min(my.data[,9]))
X10=(X10-min(my.data[,10]))/(max(my.data[,10])-min(my.data[,10]))
X11=(X11-min(my.data[,11]))/(max(my.data[,11])-min(my.data[,11]))
choquet_inputs=c(X8,X9,X10,X11)
Final_Output=choquet(choquet_inputs,choquet_weights)
The_final_output=(Final_Output*(max(my.data[,13])-min(my.data[,13])))+min(my.data[,13])
The_final_output#This is the Output of the solution
